name: 🏗️ » build & test

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          # - windows-latest
          - ubuntu-latest
        node-version: [18.x]

    name: ${{ matrix.os }} (Node.js ${{ matrix.node-version }})

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }} ⚙
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run display server 🖥
        run: /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 & echo "Started xvfb"
        shell: bash
        if: ${{ success() && matrix.os == 'ubuntu-latest' }}

      - name: Install node_modules 📦
        run: npm ci

      - name: Cache node_modules 💾
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Test + Build 🚀
        run: |
          npm run lint
          npm run compile
          npm run package-web
          npm test
        env:
          DISPLAY: ':99.0'
